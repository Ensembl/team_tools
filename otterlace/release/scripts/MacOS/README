The scripts in this directory and corresponding config files in
otterlace/release/etc/MacOS should allow an ab-initio build of the Mac
otterlace environment, and then of annotools and otterlace itself.

Recipe:

cd ~/Dist # or wherever you want to do your app building

setup_app_skeleton.sh otterlace.app

  # sets up the otterlace.app directory tree, including symlinks out
  # of the tree for var and share. attempts to share macports
  # distfiles if appropriate.


cd otterlace.app

install_macports.sh

  # downloads, configures and installs MacPorts for and into the app
  # tree. sets up a local tree for locally-patched port
  # files. generates the port_update.sh script and prompts for:

# connect to non-rsync-firewalled network and run:
./Contents/Resources/sbin/port_update.sh

# connect back to normal network if necessary.


install_ports.sh

  # uses MacPorts to install all the ports listed in
  # etc/MacOs/ports.list


install_cpan_bundle.sh

  # configures cpan and sets up the distroprefs mechanism to tailor
  # the installation of some modules.  uses cpan to install the
  # modules listed in etc/MacOS/Bundle/Otterlace/MacOS.pm
  # (which are not available in MacPorts)


install_annotools_prereqs.sh <path to zmap build directory>

  # compiles and installs ACEDB and libAceConn, which don't need to
  # be reinstalled every time there's a new ZMap.


install_annotools.sh <path to zmap build directory>

  # configures, compiles and installs ZMap, SeqTools and XRemote.


install_otterlace.sh <path to ensembl-otter git checkout>

  # runs otterlace_build with suitable arguments to install
  # otter client.


# Test the build here.

  # mg13 note to self:
  #   my environment accesses ~/Dist/otterlace.app.
  #   Put the test app somewhere else for testing, and ensure
  #   ~/Dist/otterlace.app is empty.


TBC: Make unstripped disk image

  # Edit a copy of ensembl-otter/scripts/make_image.sh to set the correct version.
  # Run it to create sparseimage.
  # Make sure the new app is called otterlace.app again, then:
  #   cp -pR otterlace.app /Volumes/otterlace_mac_intel-<MM>-<NN>
  # Obtain ReadMe.rtfd from previous release, and update it.
  #   cp -pR ReadMe.rtfd /Volumes/otterlace_mac_intel-<MM>-<NN>
  # Re-run make_image.sh to create dmg
  # Save the dmg as a backup.


cleanup_ports.sh

  # Removes ports only needed for the build.


TBC: Remove static libraries

  cd Contents/Resources/lib
  find . -name 'lib*.a' | grep -v perl | xargs rm


TBC: Rebuild disk image with stripped otterlace

  # Largely as above.
