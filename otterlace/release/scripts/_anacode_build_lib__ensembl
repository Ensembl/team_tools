#! /bin/sh

# Putting the ensembl sub-projects's modules/ into silos, probably for
# historical reasons descending from how the webteam did it on legacy
# servers.
#
# Affects both client (otterlace_build) & server (webvm-deps.git).

_do_build() {
    local build_dir gitsrc

    build_dir="$( mktemp -d "$install_dir/$reponame.XXXXXX" )" || \
        bail "Failed to mktemp -d"

    gitsrc="$( anacode_source_repo --isclean --purpose build_lib__ensembl $reponame )" || bail "Can't get $reponame gitsrc"

    git init -q "$build_dir" &&
    (
        cd "$build_dir" &&
        git remote add origin "$gitsrc" &&
        git fetch -q --depth 1 origin $src_version:_build $src_version:refs/remotes/$rem_version &&
        git checkout -q _build &&
        (printf "Ensembl '%s' from %s is\n" "$reponame" "$gitsrc"; git log --decorate -1 | sed -e 's/^/    /') &&
        mkdir "$install_dir/$reponame" &&
        if [ -f "Makefile.PL" ]; then
            bail "$reponame/Makefile.PL: probably a good idea, but not yet supported"
        elif [ -d "modules" ]; then
            rm -rf modules/t
            mv -vi modules "$install_dir/$reponame/modules"
        else
            bail "don't know how to build $reponame $src_version"
        fi &&
        true ) &&
    rm -rf -- "$build_dir" &&
    true
}


# This calling convention is used from webvm-deps.git/fetch-ensemblNN
reponame="$1"
install_dir="$2"
src_version=$3

# shared config and functions
. "$( dirname "$0" )/_otterlace.sh" || exit 1

[ "$#" = 3 ] && [ -d "$install_dir" ] && [ -n "$src_version" ] || \
    bail "Syntax: _anacode_build_lib__ensembl <reponame> <install_dir> <src_version>

  install_dir must be absolute, because this script does chdir(2)

  src_version = < release number | commitid | name of ref on remote >

bad args
  $*"


if [[ "$src_version" =~ ^[0-9][0-9][0-9]?$ ]]; then
    # ordinarily just a verson number, so turn it into a branch name
    src_version="release/$src_version"
    rem_version="origin/$src_version"
elif [[ "$src_version" =~ ^[0-9a-f]{6,40}$ ]]; then
    # commitid is fine by itself
    rem_version="by_commitid"
else
    # for anything else, we assume it's the whole symbolic name
    :
    rem_version="origin/$src_version"
fi

_do_build
