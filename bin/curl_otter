#! /bin/bash
# Bash: regex

# curl wrapper to
#   - take Otterlace's cookie for WTSISignOn; assume it is current
#   - zcat if necessary
#   - avoid the proxy
#   - be quiet
#   - fill in the base URL & version (live) from client config
#
# Examples...
#
#  With explicit URL and verbosity,
#   curl_otter -v http://otter.sanger.ac.uk/cgi-bin/otter/78/get_accession_types?accessions=P35613.2,B0PJS9.1
#
#  Taking server from .otter_config ,
#    curl_otter 73/test
#    curl_otter test		# live version
#    curl_otter \~mca/76/test	# use the per-developer config


unset http_proxy
unset HTTP_PROXY

zcat_maybe() {
    perl -e '
 undef $/;
 $data = <>;                    # assume the file is not too huge
 if ($data =~ m{\A\037\213}) {
   open my $fh, "|-", "zcat"
     or die "Pipe to zcat failed: $!";
   print $fh $data;
 } else {
   print $data;
 }'
}

# accept extra flags to curl
FLAG=-s
while [[ "$1" =~ ^- ]]; do
    FLAG="$FLAG $1"
    shift
done

# accept shortcuts like qw( test 73/test ~mca/73/test )
if ! [[ "$1" =~ ^(https?:|/) ]]; then
    set -e
    url="$( PERL5LIB= perl \
 -I/software/anacode/otter/otter_live/ensembl-otter/modules \
 -MBio::Otter::Version -MConfig::IniFiles -E '

 my $url = shift;
 my $c;
 foreach $fn (@ARGV) {
   $c = Config::IniFiles->new(-file => $fn, -import => $c) if -f $fn;
 }
 my $base = $c->val(qw( client url ));
 $base = qq{http://otter.sanger.ac.uk/cgi-bin/otter} if !defined $base;
 $base =~ s{/+$}{};
 $base =~ s{~[^/]+$}{} if $url =~ m{^~};

 my @url = ($base);
 if ($url =~ m{(^|/)\d{2,3}/}) {
   push @url, "/" unless $1 eq "/";
 } else {
   push @url, "/", Bio::Otter::Version->version, "/";
 }
 push @url, $url;
 print join "", @url;
 ' "$1" ~/.otter_config ~/.otter/config )"
    echo Fetch url=$url >&2
    set -- $url
fi

curl $FLAG -b ~/.otter/ns_cookie_jar "$@" | zcat_maybe
