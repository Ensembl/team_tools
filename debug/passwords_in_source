#! /bin/bash

main() {
    ptnfile="$( cd $( dirname "$0" ); pwd )/$( basename "$0" ).ptn"
    [ -f "$ptnfile" ] || {
        echo "$0: Need patterns file, one per line for '[git] grep -E -f $ptnfile'" >&2
        exit 4
    }

    sloow=$( ionice -p$$ )
    [ "$sloow" = 'idle' ] || echo "[w] Running with ionice class '$sloow', try 'ionice -c3' ?" >&2

    printf -- '-*- org -*- # an emacs folding mode\n\n'
    for repo in $( intcvs1_list_repos ); do
        searchy "$repo"
    done | sanitise_hits
}

sanitise_hits() {
    perl -MFile::Slurp=slurp -pE '
 BEGIN {
   push @ptn, slurp(shift);
   chomp @ptn;
   $ptn = join "|", @ptn;
   $| = 1;
 }
 s/($ptn)/"*" x length($1)/eg
 ' $ptnfile
}


intcvs1_list_repos() {
    local devs

    [ $( hostname -s ) = 'intcvs1' ] || {
        echo "Run me on intcvs1.  Too complicated otherwise, to get quoting right." >&2
        exit 5
    }

    devs=$( getent group anacode | cut -d: -f4 ) # csv with dups
    find /repos/git/anacode /repos/git/users/{$devs} -name HEAD -type f 2>/dev/null \
        | perl -pe 's{(\/logs)?\/HEAD}{}' | sort -u
}

searchy() {
    local dir branch all_hits all_nhit tip_hits tip_nhit state
    dir="$1"
    cd "$dir" || exit 6

    branch="$( git head || echo HEAD )" # 'git head' is part of git-yacontrib
    commit=$( git log -1 --format=%h $branch 2>&1 ) || {
        printf '* %-4s %25s %s\n%s\n\n' 'FAIL' '' "$dir" "$commit"
        return
    }

    # Super-thorough but rather vague about where the hit was found
    all_hits="$( git fast-export --all | grep -a -i -E -f "$ptnfile" 2>&1 )"
    all_nhit="$( printf '%s\n' "$all_hits" | wc -l )"
    [ -z "$all_hits" ] && all_nhit=0

    # git-grep(1) HEAD, to tell "is the problem now fixed?"
    tip_hits="$( git grep -i -E -f "$ptnfile" -a -n $commit 2>&1 )"
    tip_nhit="$( printf '%s\n' "$tip_hits" | wc -l )"
    [ -z "$tip_hits" ] && tip_nhit=0

    case "$all_nhit,$tip_nhit" in
        0,0) state=OK ;;
        *,0) state=DONE ;;
        *,*) state=TODO ;;
    esac

    printf '* %-4s %25s %s\n' $state "(all:$all_nhit $branch:$tip_nhit)" "$dir"
    [ -n "$tip_hits" ] && printf '** Hits in %s (%s)\n%s\n' $commit $branch "$tip_hits"
    [ -n "$all_hits" ] && printf '** All hits (no location info)\n%s\n\n' "$all_hits"
}

main
