#!/usr/local/bin/perl -Tw

use strict;
use warnings;

#use CGI::Carp qw(fatalsToBrowser);
BEGIN { use lib ($ENV{OTTER_PERL_INC} || q{}) =~ m{([^:]+)}g }

use DBI;
use CGI;
use JSON();

my $cgi = CGI->new;
my $json = JSON->new;

my $db = $cgi->param("db");
my $dbh =
    DBI->connect("DBI:mysql:host=otterlive;port=3324;database=${db}",
                 "ottadmin", "xxx",
                 { RaiseError => 1, AutoCommit => 0 });
my $db_selection =
    $dbh->selectall_arrayref(<<'QUERY', { Slice => { } });
select
    sr.name as chr_name, sr.seq_region_id as chr_id, -- chromosome
    t.stable_id as transcript_sid,                   -- transcript stable id
    t.transcript_id as transcript_id                 -- transcript id
from
    (select
     t.seq_region_id,
     t.stable_id

     from transcript t
     where t.is_current
     group by t.seq_region_id, t.stable_id
     having count(*) > 1
    ) dups
    inner join seq_region sr using (seq_region_id)
    inner join transcript t using (seq_region_id)
    where t.stable_id = dups.stable_id
    and   t.is_current
order by sr.name, sr.seq_region_id, t.stable_id, t.transcript_id
QUERY
$dbh->disconnect;

print $cgi->header("text/plain"), $json->encode($db_selection);
